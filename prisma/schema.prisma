// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  forms         Form[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

enum FieldType {
  TEXT
  TEXTAREA
  NUMBER
  EMAIL
  PASSWORD
  MULTIPLECHOICE
  CHECKBOX
  DROPDOWN
  DATE
  SCALE
}

model Field {
  id          String    @id @default(cuid())
  label       String
  type        FieldType
  required    Boolean
  placeholder String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Form        Form      @relation(fields: [formId], references: [id])
  formId      String
}

model Form {
  id          String   @id @default(cuid())
  title       String
  description String?
  fields      Field[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  owner       User     @relation(fields: [ownerId], references: [id])
  ownerId     String
}

enum MessageAgents {
  SYSTEM
  USER
  ASSISTANT
}

model Conversation {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]
}

model Message {
  id             String        @id @default(cuid())
  content        String
  createdAt      DateTime      @default(now())
  conversation   Conversation? @relation(fields: [conversationId], references: [id])
  conversationId String?
  agent          MessageAgents
}
